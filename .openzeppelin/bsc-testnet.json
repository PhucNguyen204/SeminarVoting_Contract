{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x6edeBa758CD150444AF42D3A65e5f7E1a20E8658",
      "txHash": "0x54999aa230504505b4fa2a41028808ca017eda991654f1b5b4c6986183542aad",
      "kind": "transparent"
    },
    {
      "address": "0x0ACbAA1D03472edC0B4bFe3fdC3330EB38aC5Aa1",
      "txHash": "0xabe04408ce2b31cdee51b8e2513a51ebb3af2772c50355d7115bebc484227897",
      "kind": "transparent"
    },
    {
      "address": "0x4184FCB9a0ceaC75484285Ed51B28FA30edB2457",
      "txHash": "0x5ad4b25777be0cd7a9f0cf873905523207b38fb434d145bd4a137a0da51f7fe1",
      "kind": "transparent"
    },
    {
      "address": "0xb6f280B8A90aa1f138E31e2fE1aCCB35e1375826",
      "txHash": "0xdbfe1b5a60283bac8a555452464d56d6d16c19ee33579d34d361d30310f07d1d",
      "kind": "transparent"
    },
    {
      "address": "0xB622412BC283B23bd996C286bf7F7Db9c9427c1F",
      "txHash": "0x86d93f4d96e52876a880bfa2d30af784ebdd2c9a1e065a4378636e5646825a0a",
      "kind": "transparent"
    },
    {
      "address": "0x0f1adF88059B3b4e38C508B90CCC96DABe6faE95",
      "txHash": "0x94e3f0912a3ce03436e0354a9a20f951e5793fbe09d2699b2da503d310b9daa7",
      "kind": "transparent"
    },
    {
      "address": "0xb2B7A4D0da9C9c0dBe5C7f4Dd8Fce2AC5C7Be2da",
      "txHash": "0x7f428b2bff887c6db1b5ba54b932acc23a98338aa12e9ad53efd56e595d8aec1",
      "kind": "transparent"
    },
    {
      "address": "0x99784D352ae6Fe055095E5464A6176b702c1311f",
      "txHash": "0x7a539b0ced0c39d37ec0f657719326628c8154d94a2efa61499618194e9cc0e0",
      "kind": "transparent"
    },
    {
      "address": "0xd287c7BDAf6d02BDDE650D2c6B57f60B61B3F99e",
      "txHash": "0x11f4141b88303bac11736b43ebe52941fdcd3a6682ad8c26fb776ffe5a7618a3",
      "kind": "transparent"
    },
    {
      "address": "0xc2b5cf6F36560049d246F05A0d1Fd3569F8de06d",
      "txHash": "0x7583247432447102c1c3e32f46c41f1ddd27ba156b572fec3f8a9ad2918aef6c",
      "kind": "transparent"
    },
    {
      "address": "0x20Cdf4d8661d1AEDae8063E85875D8db5Dd25bfF",
      "txHash": "0xd401e293b87bf2d6eb62dc60207a220855fe4ac19b30416c519d12cf66d8cd94",
      "kind": "transparent"
    },
    {
      "address": "0x91fc273C2657C365234F36A75b672Cb2667240F6",
      "txHash": "0x3c6a0f6ed5182c2b91328680e7aeb5bfbf62e5382ea985fa94730d5b234a3ee2",
      "kind": "transparent"
    },
    {
      "address": "0x2A3ddB0504ABD567DD412C59B34451D0490c6469",
      "txHash": "0x7b10c982c6fa7552536bf432e0b3bd157350dca7fee6eea76d80cc9069cdbdc1",
      "kind": "transparent"
    },
    {
      "address": "0x2C59EC0432d8A48DfedB2b26fC27D953fbab718C",
      "txHash": "0x7f4c9a3d7061e90a8822d46e121572006d4463c058c0e4b3ed80489a09b6ca74",
      "kind": "transparent"
    },
    {
      "address": "0xB8B6Aa2F77E52C9DB4745384901C3acecA6CAa1d",
      "txHash": "0x6c0d47350b5bb1606e41f76d82120abb9753bae22edbde453ea8c898f34e3cf2",
      "kind": "transparent"
    },
    {
      "address": "0x8852dAeF81104Ee2c4843b153e3C4295e567b0A6",
      "txHash": "0xc68d7dedc6196972f4ea9790b546cc0b762650c8eef8d6e89f10a35318d3bc81",
      "kind": "transparent"
    },
    {
      "address": "0xD1AD49daDEfc662d8701C840C5CA535D32eaC976",
      "txHash": "0xd28fc05450d0bedacfd4545db1d176e75f487b57fcb8732ad73917471676382e",
      "kind": "transparent"
    },
    {
      "address": "0xEF25160bBf85285a4A5FAA15C48a8d01516A6908",
      "txHash": "0xf01cc85c04336f5dc2b632aa5c7188a6491c6c692390fd8eb148fd000fe0a85e",
      "kind": "transparent"
    },
    {
      "address": "0x02Cbd3F2002986d0C84EaF775E680Fe10A129655",
      "txHash": "0x4eae28be38b1521bee02d718b4ed34125f86a705ff3c635327b4876136115220",
      "kind": "transparent"
    },
    {
      "address": "0xf7964ea06e82D3b9c32FF43E99658f60ac4c6259",
      "txHash": "0x7e9367838e5138ddc95f733a388395dac1b2df46c5fce6ebec1749923f5aee41",
      "kind": "transparent"
    },
    {
      "address": "0x6264f4562306620198Efc0240033aAaF94F81a49",
      "txHash": "0xfc9bdd75bdde7f6daf9314bd4208d5bf1f4c9050c501dfce218cdd42ffe9073b",
      "kind": "transparent"
    },
    {
      "address": "0xE10871ca4a99f476e558a8917000fa5b54Ea52cC",
      "txHash": "0xea3be51745b0c85af5dfabf36f246b7f3b5b71a0254d91b7f9666c47d84763ff",
      "kind": "transparent"
    },
    {
      "address": "0xAC2b2928ED09C7782d4c82a9d3149c9e148a1EfF",
      "txHash": "0x464f80e295b7c250b42c7a7abf74a534a6978bc4f567e2131af735b675182143",
      "kind": "transparent"
    },
    {
      "address": "0xFfa1aa1BE226b4D56B68e709a2Ae038199Dcd71e",
      "txHash": "0x77f0ab1747ccc709851a7cdd33385c991eab94c030b6f42819b706d2af61b88e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c233a4ef10ca1eafc28c4ce1960ddc017b57e658d78f635f9a05182cf9b3e92d": {
      "address": "0x4Af84Ac95410598816a907411534Af8b90223e29",
      "txHash": "0xa1f82f5cb51654b03d108112b45c66c4586dbbce21d90afbd1ec89c272fe96cb",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5b893abf8dea773d59f5dc46d84930ee5e80cbd961c8b33326322cbd77c27442": {
      "address": "0x67d4325b5F9a377f4D3b6A29E9aD37d79DFE681C",
      "txHash": "0x32f60f777ee514282bf6cc0e19ab6ddd81e37c7b3806480b4815789e9b8c0d71",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:9"
          },
          {
            "label": "seminars",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(SeminarData)6650_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:22"
          },
          {
            "label": "seminarSpeakers",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)310_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)619_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(SeminarData)6650_storage)": {
            "label": "mapping(uint256 => struct SeminarNFT.SeminarData)",
            "numberOfBytes": "32"
          },
          "t_struct(SeminarData)6650_storage": {
            "label": "struct SeminarNFT.SeminarData",
            "members": [
              {
                "label": "seminarId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "nameSpeaker",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speaker",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b1a6cd1e9c59ac35cc33f93eaeab0c1d152451bf9c3a7290dfaed548d0f18ae4": {
      "address": "0x087260f8875a1858F4c161498b7a03B0A8C249dc",
      "txHash": "0x58a7daf5700fc5005cb4fb33643d5cf428ca68fc72fa65f11c44ca9b7275143f",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "seminarNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(SeminarNFT)6881",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:20"
          },
          {
            "label": "votingRounds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(VotingRound)6911_storage)",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:21"
          },
          {
            "label": "userVotes",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:22"
          },
          {
            "label": "totalVotes",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:23"
          },
          {
            "label": "nextRoundId",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(SeminarNFT)6881": {
            "label": "contract SeminarNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingRound)6911_storage)": {
            "label": "mapping(uint256 => struct Voting.VotingRound)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VotingRound)6911_storage": {
            "label": "struct Voting.VotingRound",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxVotesPerVoter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "seminarIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "speakerVotes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6b6430977c3aec377f9c24d794b20ed0e018cd6cb0ecc8d25d81a7f1b610c397": {
      "address": "0xA54cEE75Cf957Bb5Ef084c7AFAd42950a4b4485C",
      "txHash": "0x574de449e13fd6a830d23335566324180263e424977bbdce1338933f29773043",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "votersList",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage",
            "contract": "WhitelistUpgradeableV2",
            "src": "contracts\\Whitelist.sol:23"
          },
          {
            "label": "nameList",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "WhitelistUpgradeableV2",
            "src": "contracts\\Whitelist.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1add138d41305c540b8d28b0a8427e774345c8b4ed4dfb2d22cfec41de1bddc7": {
      "address": "0x36d926B4D2CB13A731A65f8FEE5F15c2a04e4Bd6",
      "txHash": "0xf85d0a7dc9d1650c807faf894922796bcc610888f0d7e87d3e8eb608e2f0dc08",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:16"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(WhitelistUpgradeableV2)9053",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:18"
          },
          {
            "label": "seminars",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(SeminarData)6579_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:30"
          },
          {
            "label": "seminarSpeakers",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "SeminarNFT",
            "src": "contracts\\SeminarNFT.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)310_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(ERC721URIStorageStorage)619_storage": {
            "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
            "members": [
              {
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)151_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(WhitelistUpgradeableV2)9053": {
            "label": "contract WhitelistUpgradeableV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SeminarData)6579_storage)": {
            "label": "mapping(uint256 => struct SeminarNFT.SeminarData)",
            "numberOfBytes": "32"
          },
          "t_struct(SeminarData)6579_storage": {
            "label": "struct SeminarNFT.SeminarData",
            "members": [
              {
                "label": "seminarId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "image",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "nameSpeaker",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "metadataURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speakers",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:25",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7aab165d008326b3aef3068ed7d5a204e46597b65d13b512e56067a989c0d625": {
      "address": "0x69273501be978e655Ae95987BC70ca186246DCe4",
      "txHash": "0x9a0db855baf721fe53ef03db65bfebe3f210522821328f3693b3d6cb382d897e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "seminarNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(SeminarNFT)6873",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:29"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(WhitelistUpgradeableV2)9053",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:30"
          },
          {
            "label": "votingRounds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VotingRound)6940_storage)",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:32"
          },
          {
            "label": "userVotesForSeminar",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:33"
          },
          {
            "label": "userVotesForSpeaker",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:34"
          },
          {
            "label": "totalVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:35"
          },
          {
            "label": "nextRoundId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(SeminarNFT)6873": {
            "label": "contract SeminarNFT",
            "numberOfBytes": "20"
          },
          "t_contract(WhitelistUpgradeableV2)9053": {
            "label": "contract WhitelistUpgradeableV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingRound)6940_storage)": {
            "label": "mapping(uint256 => struct Voting.VotingRound)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VotingRound)6940_storage": {
            "label": "struct Voting.VotingRound",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxVotesPerVoterForSeminar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxVotesPerVoterForSpeaker",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "seminarIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speakersInRound",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "speakerVotes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "votersForSeminar",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votersForSpeaker",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "seminarExist",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "speakerExist",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "checkVotedSeminar",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "checkVotedSpeaker",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a583c1574c9157a09a2a9c6c45436d275bab36adcd5c08f72a8b7ad732b8ee3e": {
      "address": "0x7F3F12d75a153DffC78aa0F24FA16476F5D5F0B6",
      "txHash": "0xab5f190777b8b28eb2dcf8a37fd07df759eff985827c5d897294cfe5f913592e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "seminarNFT",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(SeminarNFT)6873",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:29"
          },
          {
            "label": "whitelist",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(WhitelistUpgradeableV2)9341",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:30"
          },
          {
            "label": "votingRounds",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(VotingRound)6940_storage)",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:32"
          },
          {
            "label": "userVotesForSeminar",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:33"
          },
          {
            "label": "userVotesForSpeaker",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:34"
          },
          {
            "label": "totalVotes",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:35"
          },
          {
            "label": "nextRoundId",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Voting",
            "src": "contracts\\Voting.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)211_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(SeminarNFT)6873": {
            "label": "contract SeminarNFT",
            "numberOfBytes": "20"
          },
          "t_contract(WhitelistUpgradeableV2)9341": {
            "label": "contract WhitelistUpgradeableV2",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingRound)6940_storage)": {
            "label": "mapping(uint256 => struct Voting.VotingRound)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VotingRound)6940_storage": {
            "label": "struct Voting.VotingRound",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxVotesPerVoterForSeminar",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxVotesPerVoterForSpeaker",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "seminarIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "speakersInRound",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "speakerVotes",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "votersForSeminar",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votersForSpeaker",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "seminarExist",
                "type": "t_mapping(t_uint256,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "speakerExist",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "checkVotedSeminar",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "checkVotedSpeaker",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "13"
              }
            ],
            "numberOfBytes": "448"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
